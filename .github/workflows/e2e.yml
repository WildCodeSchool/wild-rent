name: e2e-tests-workflow

on: push

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    env:
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      TEST_MAIL_API_KEY: ${{ secrets.TEST_MAIL_API_KEY }}
      TEST_MAIL_NAMESPACE: ${{ secrets.TEST_MAIL_NAMESPACE }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Create .env
        run: |
          touch .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
      - name: Create e2e .env
        run: |
          cd e2e
          touch .env
          echo "TEST_MAIL_API_KEY=${{ secrets.TEST_MAIL_API_KEY }}" >> .env
          echo "TEST_MAIL_NAMESPACE=${{ secrets.TEST_MAIL_NAMESPACE }}" >> .env
      - name: Launch e2e containers
        run: docker compose -f docker-compose.e2e.yml up -d --build

      - name: Wait for backend to be ready
        run: |
          # Attend que le backend soit prÃªt pour accepter les commandes (ici tu peux ajuster selon ton application)
          docker exec wild-rent-backend-1 sh -c "until curl -s http://localhost:4000; do echo 'Waiting for backend...'; sleep 5; done"
      - name: Launch fixtures
        run: |
          docker exec wild-rent-backend-1 sh -c "cd src/fixtures && npx ts-node fixtures.ts "
      - name: Launch e2e tests
        run: docker compose -f docker-compose.e2e.yml run e2e npx playwright test --output=/app/test-results

      # - name: Shutdown containers
      #   if: always()
      #   run: docker compose -f docker-compose.e2e.yml down
