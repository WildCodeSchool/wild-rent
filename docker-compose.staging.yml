services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin
      POSTGRES_DB: db_wild_rent
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d db_wild_rent -U admin"]
      interval: 1s
      timeout: 2s
      retries: 100
  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy
  backend:
    image: annieccarignan/backend:latest
    pull_policy: always
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s 
      retries: 100
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  frontend:
    image: annieccarignan/frontend:latest
    pull_policy: always
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - 7001:80
volumes:
  db-data:
